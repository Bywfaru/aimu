/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    media: Media;
    pages: Page;
    services: Service;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    footer: Footer;
    homepage: Homepage;
    nav: Nav;
    settings: Setting;
  };
  globalsSelect: {
    footer: FooterSelect<false> | FooterSelect<true>;
    homepage: HomepageSelect<false> | HomepageSelect<true>;
    nav: NavSelect<false> | NavSelect<true>;
    settings: SettingsSelect<false> | SettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  /**
   * The URL-friendly identifier for this page. It should be lowercase and can only contain letters, numbers, and hyphens.
   */
  slug: string;
  /**
   * A brief description of the page for SEO purposes.
   */
  description: string;
  blocks?:
    | (
        | {
            title?: string | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'googleReviewsCarousel';
          }
        | {
            title?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            showButton?: boolean | null;
            buttonText?: string | null;
            buttonLink?: string | null;
            backgroundImage: string | Media;
            contentBackgroundColor?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            title?: string | null;
            backgroundImage: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'pageTitle';
          }
        | {
            title?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            showButton?: boolean | null;
            buttonText?: string | null;
            buttonLink?: string | null;
            media: string | Media;
            backgroundColor?: string | null;
            contentBackgroundColor?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'paragraphOverMedia';
          }
        | {
            title?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            showButton?: boolean | null;
            buttonText?: string | null;
            buttonColor?: string | null;
            buttonTextColor?: string | null;
            buttonLink?: string | null;
            textAlign?: ('left' | 'right' | 'center' | 'justify') | null;
            backgroundColor?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'paragraph';
          }
        | {
            title?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            showButton?: boolean | null;
            buttonText?: string | null;
            buttonLink?: string | null;
            media: string | Media;
            textPosition?: ('left' | 'right') | null;
            backgroundColor?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'paragraphWithMedia';
          }
        | {
            title?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            showButton?: boolean | null;
            buttonText?: string | null;
            buttonLink?: string | null;
            backgroundColor?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'services';
          }
        | {
            mobileHeight: number;
            tabletHeight?: number | null;
            desktopHeight?: number | null;
            backgroundColor?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'spacer';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: string;
  title: string;
  /**
   * The URL-friendly identifier for this service. It should be lowercase and can only contain letters, numbers, and hyphens. e.g., "belly-binding" would be accessible through /services/belly-binding.
   */
  slug: string;
  summary?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  media?:
    | {
        item: string | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'services';
        value: string | Service;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  blocks?:
    | T
    | {
        googleReviewsCarousel?:
          | T
          | {
              title?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
        hero?:
          | T
          | {
              title?: T;
              content?: T;
              showButton?: T;
              buttonText?: T;
              buttonLink?: T;
              backgroundImage?: T;
              contentBackgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        pageTitle?:
          | T
          | {
              title?: T;
              backgroundImage?: T;
              id?: T;
              blockName?: T;
            };
        paragraphOverMedia?:
          | T
          | {
              title?: T;
              content?: T;
              showButton?: T;
              buttonText?: T;
              buttonLink?: T;
              media?: T;
              backgroundColor?: T;
              contentBackgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        paragraph?:
          | T
          | {
              title?: T;
              content?: T;
              showButton?: T;
              buttonText?: T;
              buttonColor?: T;
              buttonTextColor?: T;
              buttonLink?: T;
              textAlign?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        paragraphWithMedia?:
          | T
          | {
              title?: T;
              content?: T;
              showButton?: T;
              buttonText?: T;
              buttonLink?: T;
              media?: T;
              textPosition?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        services?:
          | T
          | {
              title?: T;
              content?: T;
              showButton?: T;
              buttonText?: T;
              buttonLink?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        spacer?:
          | T
          | {
              mobileHeight?: T;
              tabletHeight?: T;
              desktopHeight?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  summary?: T;
  description?: T;
  media?:
    | T
    | {
        item?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  items?:
    | {
        label: string;
        /**
         * Enter a URL or a relative path (e.g., /about)
         */
        url: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: string;
  blocks?:
    | (
        | {
            title?: string | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'googleReviewsCarousel';
          }
        | {
            title?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            showButton?: boolean | null;
            buttonText?: string | null;
            buttonLink?: string | null;
            backgroundImage: string | Media;
            contentBackgroundColor?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            title?: string | null;
            backgroundImage: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'pageTitle';
          }
        | {
            title?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            showButton?: boolean | null;
            buttonText?: string | null;
            buttonLink?: string | null;
            media: string | Media;
            backgroundColor?: string | null;
            contentBackgroundColor?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'paragraphOverMedia';
          }
        | {
            title?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            showButton?: boolean | null;
            buttonText?: string | null;
            buttonColor?: string | null;
            buttonTextColor?: string | null;
            buttonLink?: string | null;
            textAlign?: ('left' | 'right' | 'center' | 'justify') | null;
            backgroundColor?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'paragraph';
          }
        | {
            title?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            showButton?: boolean | null;
            buttonText?: string | null;
            buttonLink?: string | null;
            media: string | Media;
            textPosition?: ('left' | 'right') | null;
            backgroundColor?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'paragraphWithMedia';
          }
        | {
            title?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            showButton?: boolean | null;
            buttonText?: string | null;
            buttonLink?: string | null;
            backgroundColor?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'services';
          }
        | {
            mobileHeight: number;
            tabletHeight?: number | null;
            desktopHeight?: number | null;
            backgroundColor?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'spacer';
          }
      )[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nav".
 */
export interface Nav {
  id: string;
  items?:
    | {
        label: string;
        /**
         * Enter a URL or a relative path (e.g., /about)
         */
        url: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: string;
  /**
   * The title of the website, displayed in the browser tab and as the main heading.
   */
  siteTitle: string;
  /**
   * A brief description of the website, used for SEO and social media sharing.
   */
  siteDescription: string;
  /**
   * Email address for site contact or inquiries.
   */
  contactEmail: string;
  socialMedia?: {
    /**
     * Link to the Instagram profile.
     */
    instagram?: string | null;
    /**
     * Link to the Facebook page.
     */
    facebook?: string | null;
    /**
     * Link to the X profile.
     */
    x?: string | null;
    /**
     * Phone number for WhatsApp contact, formatted as +1234567890.
     */
    whatsapp?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  items?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  blocks?:
    | T
    | {
        googleReviewsCarousel?:
          | T
          | {
              title?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
        hero?:
          | T
          | {
              title?: T;
              content?: T;
              showButton?: T;
              buttonText?: T;
              buttonLink?: T;
              backgroundImage?: T;
              contentBackgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        pageTitle?:
          | T
          | {
              title?: T;
              backgroundImage?: T;
              id?: T;
              blockName?: T;
            };
        paragraphOverMedia?:
          | T
          | {
              title?: T;
              content?: T;
              showButton?: T;
              buttonText?: T;
              buttonLink?: T;
              media?: T;
              backgroundColor?: T;
              contentBackgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        paragraph?:
          | T
          | {
              title?: T;
              content?: T;
              showButton?: T;
              buttonText?: T;
              buttonColor?: T;
              buttonTextColor?: T;
              buttonLink?: T;
              textAlign?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        paragraphWithMedia?:
          | T
          | {
              title?: T;
              content?: T;
              showButton?: T;
              buttonText?: T;
              buttonLink?: T;
              media?: T;
              textPosition?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        services?:
          | T
          | {
              title?: T;
              content?: T;
              showButton?: T;
              buttonText?: T;
              buttonLink?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        spacer?:
          | T
          | {
              mobileHeight?: T;
              tabletHeight?: T;
              desktopHeight?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nav_select".
 */
export interface NavSelect<T extends boolean = true> {
  items?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings_select".
 */
export interface SettingsSelect<T extends boolean = true> {
  siteTitle?: T;
  siteDescription?: T;
  contactEmail?: T;
  socialMedia?:
    | T
    | {
        instagram?: T;
        facebook?: T;
        x?: T;
        whatsapp?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}